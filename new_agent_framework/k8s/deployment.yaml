apiVersion: apps/v1
kind: Deployment
metadata:
  name: agentgraph
  labels:
    app: agentgraph
    version: v0.4.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: agentgraph
  template:
    metadata:
      labels:
        app: agentgraph
        version: v0.4.0
    spec:
      containers:
      - name: agentgraph
        image: agentgraph:0.4.0
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: RUST_LOG
          value: "info"
        - name: AGENTGRAPH_ENV
          value: "production"
        - name: AGENTGRAPH_PORT
          value: "8080"
        - name: AGENTGRAPH_METRICS_PORT
          value: "9090"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: agentgraph-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: agentgraph-secrets
              key: redis-url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: agentgraph-secrets
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: agentgraph-secrets
              key: anthropic-api-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: data
          mountPath: /app/data
      volumes:
      - name: config
        configMap:
          name: agentgraph-config
      - name: data
        persistentVolumeClaim:
          claimName: agentgraph-data
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      serviceAccountName: agentgraph
---
apiVersion: v1
kind: Service
metadata:
  name: agentgraph-service
  labels:
    app: agentgraph
spec:
  selector:
    app: agentgraph
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agentgraph
  labels:
    app: agentgraph
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agentgraph-config
  labels:
    app: agentgraph
data:
  config.toml: |
    [server]
    host = "0.0.0.0"
    port = 8080
    
    [metrics]
    enabled = true
    port = 9090
    
    [logging]
    level = "info"
    format = "json"
    
    [execution]
    max_concurrent_graphs = 100
    default_timeout_seconds = 300
    
    [enterprise]
    multi_tenancy_enabled = true
    audit_logging_enabled = true
    
    [llm]
    default_provider = "openai"
    timeout_seconds = 60
    max_retries = 3
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: agentgraph-data
  labels:
    app: agentgraph
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agentgraph-ingress
  labels:
    app: agentgraph
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - agentgraph.yourdomain.com
    secretName: agentgraph-tls
  rules:
  - host: agentgraph.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: agentgraph-service
            port:
              number: 80